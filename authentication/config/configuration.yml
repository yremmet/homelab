---
###############################################################
#                   Authelia configuration                    #
###############################################################

#jwt_secret: a_very_important_secret
default_redirection_url: https://public.example.com

server:
  host: 0.0.0.0
  port: 9091

log:
  level: debug
# This secret can also be set using the env variables AUTHELIA_JWT_SECRET_FILE

totp:
  issuer: authelia.com

# duo_api:
#  hostname: api-123456789.example.com
#  integration_key: ABCDEF
#  # This secret can also be set using the env variables AUTHELIA_DUO_API_SECRET_KEY_FILE
#  secret_key: 1234567890abcdefghifjkl

authentication_backend:
  #file:
  #  path: /data/users_database.yml
  ldap:
    implementation: custom
    url: ldap://ldap:3890
    timeout: 5s
    start_tls: false
    base_dn: dc=bad-gateway,DC=online
    username_attribute: uid
    additional_users_dn: OU=people
    # To allow sign in both with username and email, one can use a filter like
    # (&(|({username_attribute}={input})({mail_attribute}={input}))(objectClass=person))
    users_filter: (&({username_attribute}={input})(objectClass=person))
    additional_groups_dn: OU=groups
    groups_filter: (member={dn})
    group_name_attribute: cn
    mail_attribute: mail
    display_name_attribute: displayName  
      #    user: UID=authelia,CN=users,CN=accounts,DC=bad-gateway,DC=online
    user: UID=authelia,ou=people,DC=bad-gateway,DC=online

access_control:
  default_policy: deny
  rules:
    - domain: sonarr.bad-gateway.online
      policy: one_factor
    - domain: radarr.bad-gateway.online
      policy: one_factor
    - domain: prolarr.bad-gateway.online
      policy: one_factor    
    - domain: plex.bad-gateway.online
      policy: bypass
    - domain: net.bad-gateway.online
      policy: one_factor
    - domain: secure.example.com
      policy: two_factor

session:
  name: authelia_session
  # This secret can also be set using the env variables AUTHELIA_SESSION_SECRET_FILE
  # secret: unsecure_session_secret
  expiration: 3600  # 1 hour
  inactivity: 300  # 5 minutes
    #  domain: example.com  # Should match whatever your root protected domain is


    # redis:
    #host: redis
    #port: 6379
    # This secret can also be set using the env variables AUTHELIA_SESSION_REDIS_PASSWORD_FILE
    # password: authelia

regulation:
  max_retries: 300
  find_time: 120
  ban_time: 300

storage:
  #encryption_key: you_must_generate_a_random_string_of_more_than_twenty_chars_and_configure_this
  local:
    path: /data/db.sqlite3

notifier:
  disable_startup_check: false
  filesystem:
    filename: /config/notification.txt
